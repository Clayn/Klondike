node {
   def mvnHome
   def jdk = tool name: 'JDK 14'
   def jdk8=tool name:'JDK 1.8'
   env.JAVA_HOME = "${jdk}"
   stage('Preparation') {
        checkout scm
        mvnHome = tool 'Maven'
        dir('klondike') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' clean"
            } else {
                bat(/"${mvnHome}\bin\mvn" clean/)
            }
        }
        dir('yukon') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' clean"
            } else {
                bat(/"${mvnHome}\bin\mvn" clean/)
            }
        }
   }
   dir('klondike') {

		stage('Build') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -DskipTests compile"
            } else {
                bat(/"${mvnHome}\bin\mvn" -DskipTests compile/)
            }
        }
        stage('Test') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore=false test"
            } else {
                bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore=false test/)
            }
        }
        stage('Install') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -DskipTests install"
            } else {
                bat(/"${mvnHome}\bin\mvn" -DskipTests install/)
            }
        }

        stage('Reporting') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -DskipTests site"
            } else {
                bat(/"${mvnHome}\bin\mvn" -DskipTests site/)
            }
        }

        stage('Results') {
            junit allowEmptyResults: true, testResults: '**/TEST-*.xml'
        }

		stage('Deployment') {
			if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -P jenkins -DskipTests deploy"
            } else {
                bat(/"${mvnHome}\bin\mvn" -P jenkins -DskipTests deploy/)
            }
        }
   }

   dir('yukon') {

        stage('Build') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -DskipTests compile"
            } else {
                bat(/"${mvnHome}\bin\mvn" -DskipTests compile/)
            }
        }
        stage('Test') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore=false test"
            } else {
                bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore=false test/)
            }
        }
        stage('Install') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -DskipTests install"
            } else {
                bat(/"${mvnHome}\bin\mvn" -DskipTests install/)
            }
        }

        stage('Reporting') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -DskipTests site"
                jacoco sourceInclusionPattern: '**/de.clayntech**/*.java,**/*.groovy,**/*.kt,**/*.kts'
            } else {
                bat(/"${mvnHome}\bin\mvn" -DskipTests site/)
                jacoco sourceInclusionPattern: '**/de.clayntech**/*.java,**/*.groovy,**/*.kt,**/*.kts'
            }
        }

        stage('Results') {
            junit allowEmptyResults: true, testResults: '**/TEST-*.xml'
        }

        stage('Deployment') {
            if (isUnix()) {
                sh "'${mvnHome}/bin/mvn' -P jenkins -DskipTests deploy "
            } else {
                bat(/"${mvnHome}\bin\mvn" -P jenkins -DskipTests deploy /)
            }
        }
   }
}